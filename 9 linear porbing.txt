9 write a program to impleemnet hashing with linear probing 
#include <stdio.h>
#include <stdlib.h>

#define TABLE_SIZE 10 // Define the size of the hash table

// Hash table array
int hashTable[TABLE_SIZE];

// Initialize the hash table with -1 to indicate empty slots
void initializeTable() {
    for (int i = 0; i < TABLE_SIZE; i++) {
        hashTable[i] = -1;
    }
}

// Hash function
int hashFunction(int key) {
    return key % TABLE_SIZE;
}

// Insert a key into the hash table using linear probing
void insert(int key) {
    int index = hashFunction(key);
    int originalIndex = index;

    while (hashTable[index] != -1) {
        index = (index + 1) % TABLE_SIZE; // Linear probing
        if (index == originalIndex) {
            printf("Hash table is full. Cannot insert key %d.\n", key);
            return;
        }
    }
    hashTable[index] = key;
    printf("Key %d inserted at index %d.\n", key, index);
}

// Search for a key in the hash table
void search(int key) {
    int index = hashFunction(key);
    int originalIndex = index;

    while (hashTable[index] != -1) {
        if (hashTable[index] == key) {
            printf("Key %d found at index %d.\n", key, index);
            return;
        }
        index = (index + 1) % TABLE_SIZE; // Linear probing
        if (index == originalIndex) {
            break; // We have traversed the entire table
        }
    }
    printf("Key %d not found.\n", key);
}

// Display the hash table
void displayTable() {
    printf("Hash Table:\n");
    for (int i = 0; i < TABLE_SIZE; i++) {
        if (hashTable[i] == -1) {
            printf("Index %d: Empty\n", i);
        } else {
            printf("Index %d: %d\n", i, hashTable[i]);
        }
    }
}

// Main function
int main() {
    int choice, key;

    initializeTable();

    while (1) {
        printf("\nMenu:\n");
        printf("1. Insert\n");
        printf("2. Search\n");
        printf("3. Display\n");
        printf("4. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);

        switch (choice) {
            case 1:
                printf("Enter the key to insert: ");
                scanf("%d", &key);
                insert(key);
                break;
            case 2:
                printf("Enter the key to search: ");
                scanf("%d", &key);
                search(key);
                break;
            case 3:
                displayTable();
                break;
            case 4:
                exit(0);
            default:
                printf("Invalid choice! Please try again.\n");
        }
    }

    return 0;
}
